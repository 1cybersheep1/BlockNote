// alternative interface
import { BlockSpec } from "./apiTypes";

export class Block<A extends string, B extends Record<string, string>>
  implements BlockSpec<A, B>
{
  constructor(private readonly _model: BlockSpec<A, B>) {}

  get id() {
    return this._model.id;
  }

  get type() {
    return this._model.type;
  }

  get children() {
    return this._model.children;
  }

  get props() {
    return this._model.props;
  }

  get toMarkdown() {
    return "mddd";
  }

  public delete() {
    // remove block
  }
}

editor.deleteBlock(blocks[4]);

editor.blocks[4].delete();

// let y1: HeadingBlock = {
//     type: "heading",
//     id: "",
//     children: [],
//     props: {
//         level: "1"
//     },
//   };

// let y: ParagraphBlock = {
//   type: "paragraph",
//   id: "",
//   children: [],
//   props: {},
// };

// let b = new Block(y);
// let b2 = new Block(y1);
